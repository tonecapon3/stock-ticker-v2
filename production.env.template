# Production Environment Variables Template
# Copy this file to your production environment and set the actual values
# DO NOT commit actual production values to version control

# Server Configuration
NODE_ENV=production
PORT=3001
REMOTE_PORT=3001

# Security Configuration (REQUIRED - Generate new values for production)
# Generate JWT secret: openssl rand -base64 32
REMOTE_JWT_SECRET=YOUR_PRODUCTION_JWT_SECRET_HERE

# Generate API key: openssl rand -base64 24  
REMOTE_API_KEY=YOUR_PRODUCTION_API_KEY_HERE

# CORS Configuration - Update with your production frontend URL
REMOTE_ALLOWED_ORIGINS=https://your-frontend-domain.com,https://your-cdn-domain.com

# User Authentication (REQUIRED)
# Generate password hashes: node -e "console.log(require('bcryptjs').hashSync('your-password', 10))"
REMOTE_ADMIN_USERNAME=admin
REMOTE_ADMIN_PASSWORD_HASH=YOUR_PRODUCTION_ADMIN_HASH_HERE

REMOTE_CONTROLLER_USERNAME=controller
REMOTE_CONTROLLER_PASSWORD_HASH=YOUR_PRODUCTION_CONTROLLER_HASH_HERE

# Production Deployment Notes:
# 1. Set all environment variables in your deployment platform (Railway, Heroku, etc.)
# 2. Never use the default/development values in production
# 3. Generate strong, unique secrets for production
# 4. Use HTTPS for all production endpoints
# 5. Regularly rotate secrets and passwords
