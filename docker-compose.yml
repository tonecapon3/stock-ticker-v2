version: '3.8'

services:
  stock-ticker:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: stock-ticker-app
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:3001"
    environment:
      # Core configuration
      - NODE_ENV=production
      - PORT=3001
      
      # Authentication (replace with real values)
      - REMOTE_ADMIN_PASSWORD_HASH=${REMOTE_ADMIN_PASSWORD_HASH}
      - REMOTE_CONTROLLER_PASSWORD_HASH=${REMOTE_CONTROLLER_PASSWORD_HASH}
      - JWT_SECRET=${JWT_SECRET}
      
      # Optional configurations
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY:-}
      
      # Process management
      - PID_FILE=/app/logs/server.pid
      
    volumes:
      # Mount logs directory for persistence
      - ./logs:/app/logs
      
      # Mount environment file if it exists
      - ./.env.production:/app/.env:ro
      
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/status/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
          
  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: stock-ticker-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - stock-ticker
    profiles:
      - proxy
      
volumes:
  logs:
    driver: local